name: "Build & Deploy Frank Felix Api"

on:
  push:
    branches:
      - develop
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    name: Validate pull request
    runs-on: ubuntu-latest

    timeout-minutes: 5
    env:
      APP_KEY: ${{ secrets.FRANK_FELIX_APP_KEY }}
      DRIVE_DISK: ${{ secrets.FRANK_FELIX_DRIVE_DISK }}
      DB_CONNECTION: ${{ secrets.FRANK_FELIX_DB_CONNECTION }}
    steps:
      - uses: actions/checkout@v4
      # Cache node modules to avoid installation every single time the runner runs
      - uses: actions/cache@v2
        with:
          path: |
            node_modules
          # The key used to retrieve the cache ,
          # hashFile function generates a unique key everytime the contents of the package-lock.json file changes
          key: ${{ runner.os }}-build-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-

      - uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: npm

      - name: Install dependancies
        run: npm ci --prefer-offline --no-audit

      - name: Create build
        run: npm run build

      - name: Tests
        run: npm run test

  main_deploy:
    if: ${{ github.ref == 'refs/heads/main' }}
    needs: build

    name: Deploy to production
    runs-on: ubuntu-latest

    timeout-minutes: 5
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: npm

      - name: Install dependancies
        run: npm ci --prefer-offline --no-audit

      - name: "Build production"
        run: npm run build

      - name: rsync deplyments
        uses: burnett01/rsync-deployments@6.0.0
        with:
          switches: -avzr --delete
          path: ./*
          remote_path: ${{secrets.FRANK_FELIX_PATH}}
          remote_host: ${{secrets.FRANK_FELIX_HOST}}
          remote_user: ${{secrets.FRANK_FELIX_USER}}
          remote_key: ${{secrets.FRANK_FELIX_KEY}}
